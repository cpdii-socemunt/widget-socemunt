name: Instagram API Proxy

on:
  workflow_dispatch: # Permite activar el workflow manualmente o desde la API
    inputs:
      user_id:
        description: "Instagram User ID"
        required: true
        default: "17841464013121117"

jobs:
  proxy_request:
    runs-on: ubuntu-latest

    steps:
      - name: Procesar solicitud a la API de Instagram
        env:
          INSTAGRAM_API_TOKEN: ${{ secrets.INSTAGRAM_API_TOKEN }} # Token de Instagram
        run: |
          # Obtener variables de entrada
          echo "Usuario: ${{ github.event.inputs.user_id }}"
          user_id=${{ github.event.inputs.user_id }}

          # Construir endpoints
          posts_endpoint="https://graph.instagram.com/$user_id/media?fields=id,caption,media_url,thumbnail_url,media_type,like_count,comments_count,is_shared_to_feed,permalink&access_token=$INSTAGRAM_API_TOKEN"
          profile_endpoint="https://graph.instagram.com/$user_id?fields=id,username,account_type,media_count,followers_count,profile_picture_url&access_token=$INSTAGRAM_API_TOKEN"

          # Obtener informaciÃ³n de perfil
          profile_data=$(curl -s "$profile_endpoint")
          echo "$profile_data" > profile.json

          # Obtener publicaciones
          posts_data=$(curl -s "$posts_endpoint")
          echo "$posts_data" > posts.json

          # Combinar resultados
          jq -n \
            --argjson profile "$(<profile.json)" \
            --argjson posts "$(<posts.json)" \
            '{profile: $profile, posts: $posts}' > combined_data.json

      - name: Subir resultado como artefacto
        uses: actions/upload-artifact@v3
        with:
          name: instagram-data
          path: combined_data.json
